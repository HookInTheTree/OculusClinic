{"ast":null,"code":"var _jsxFileName = \"E:\\\\Repository\\\\OculusClinic\\\\OculusClinic\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { Departments } from \"./Entities/Departments.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      forecasts: [],\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    this.populateDepartmentsData();\n  }\n\n  static renderDepartmentsTable(departments) {\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\",\n      \"aria-labelledby\": \"tabelLabel\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: departments.map(department => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: department.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: department.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this)]\n        }, department.date, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    let contents = this.state.loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"em\", {\n        children: [\"Loading... Please refresh once the ASP.NET backend has started. See \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://aka.ms/jspsintegrationreact\",\n          children: \"https://aka.ms/jspsintegrationreact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 90\n        }, this), \" for more details.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }, this) : App.renderDepartmentsTable(this.state.departments);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"tabelLabel\",\n        children: \"Weather forecast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This component demonstrates fetching data from the server.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), contents]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this);\n  }\n\n  async populateDepartmentsData() {\n    const response = await fetch('https://localhost:7049/api/departments/getdepartments');\n    const data = await response.json();\n    this.setState({\n      departments: data,\n      loading: false\n    });\n  }\n\n}\nApp.displayName = App.name;","map":{"version":3,"sources":["E:/Repository/OculusClinic/OculusClinic/src/App.js"],"names":["React","Component","Departments","App","constructor","props","state","forecasts","loading","componentDidMount","populateDepartmentsData","renderDepartmentsTable","departments","map","department","id","name","date","render","contents","response","fetch","data","json","setState","displayName"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,WAAR,QAA0B,2BAA1B;;AAEA,eAAe,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAGvCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,SAAS,EAAE,EAAb;AAAiBC,MAAAA,OAAO,EAAE;AAA1B,KAAb;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,uBAAL;AACH;;AAE4B,SAAtBC,sBAAsB,CAACC,WAAD,EAAc;AACvC,wBACI;AAAO,MAAA,SAAS,EAAC,qBAAjB;AAAuC,yBAAgB,YAAvD;AAAA,8BACA;AAAA,+BACI;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADA,eAOA;AAAA,kBACKA,WAAW,CAACC,GAAZ,CAAgBC,UAAU,iBACvB;AAAA,kCACI;AAAA,sBAAKA,UAAU,CAACC;AAAhB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,sBAAKD,UAAU,CAACE;AAAhB;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA,WAASF,UAAU,CAACG,IAApB;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA,cAPA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAkBH;;AAEDC,EAAAA,MAAM,GAAG;AACL,QAAIC,QAAQ,GAAG,KAAKb,KAAL,CAAWE,OAAX,gBACT;AAAA,6BAAG;AAAA,wGAAwE;AAAG,UAAA,IAAI,EAAC,qCAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,YADS,GAETL,GAAG,CAACQ,sBAAJ,CAA2B,KAAKL,KAAL,CAAWM,WAAtC,CAFN;AAIA,wBACI;AAAA,8BACI;AAAI,QAAA,EAAE,EAAC,YAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGKO,QAHL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AAE4B,QAAvBT,uBAAuB,GAAG;AAC5B,UAAMU,QAAQ,GAAG,MAAMC,KAAK,CAAC,uDAAD,CAA5B;AACA,UAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,SAAKC,QAAL,CAAc;AAAEZ,MAAAA,WAAW,EAAEU,IAAf;AAAqBd,MAAAA,OAAO,EAAE;AAA9B,KAAd;AACH;;AAnDsC;AAAtBL,G,CACVsB,W,GAActB,GAAG,CAACa,I","sourcesContent":["import React, { Component } from 'react';\r\nimport {Departments} from \"./Entities/Departments.js\";\r\n\r\nexport default class App extends Component {\r\n    static displayName = App.name;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { forecasts: [], loading: true };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.populateDepartmentsData();\r\n    }\r\n\r\n    static renderDepartmentsTable(departments) {\r\n        return (\r\n            <table className='table table-striped' aria-labelledby=\"tabelLabel\">\r\n            <thead>\r\n                <tr>\r\n                    <th>Id</th>\r\n                    <th>Name</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {departments.map(department =>\r\n                    <tr key={department.date}>\r\n                        <td>{department.id}</td>\r\n                        <td>{department.name}</td>\r\n                    </tr>\r\n                )}\r\n            </tbody>\r\n        </table>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        let contents = this.state.loading\r\n            ? <p><em>Loading... Please refresh once the ASP.NET backend has started. See <a href=\"https://aka.ms/jspsintegrationreact\">https://aka.ms/jspsintegrationreact</a> for more details.</em></p>\r\n            : App.renderDepartmentsTable(this.state.departments);\r\n\r\n        return (\r\n            <div>\r\n                <h1 id=\"tabelLabel\" >Weather forecast</h1>\r\n                <p>This component demonstrates fetching data from the server.</p>\r\n                {contents}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    async populateDepartmentsData() {\r\n        const response = await fetch('https://localhost:7049/api/departments/getdepartments');\r\n        const data = await response.json();\r\n        this.setState({ departments: data, loading: false });\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}